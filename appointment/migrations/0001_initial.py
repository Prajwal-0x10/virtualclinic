# Generated by Django 3.2.7 on 2022-04-19 19:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user_profile', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('book_time', models.TimeField(default=django.utils.timezone.now, null=True)),
                ('appointment_time', models.TimeField(default=django.utils.timezone.now, null=True)),
                ('symptom', models.CharField(default='routine checkup', max_length=200)),
                ('department', models.CharField(choices=[('Cardiologist', 'Cardiologist'), ('Dermatologists', 'Dermatologists'), ('Rheumatologist', 'Rheumatologist'), ('Orthopedist', 'Orthopedist'), ('ENT_Specialists', 'ENT_Specialists'), ('Allergists/Immunologists', 'Allergists/Immunologists'), ('Neurologist', 'Neurologist'), ('CGastroenterologist', 'Gastroenterologist'), ('Urologist', 'Urologist')], default='Cardiologist', max_length=50)),
                ('prescription_added', models.BooleanField(default=False)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_profile.doctorprofile')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_profile.patientprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('symptoms', models.CharField(max_length=200)),
                ('prescription', models.TextField()),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='appointment.appointment')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_profile.doctorprofile')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_profile.patientprofile')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Predict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptoms', models.TextField(blank=True, max_length=200, null=True)),
                ('Predicted_Disease', models.CharField(blank=True, max_length=100, null=True)),
                ('predict_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_profile.patientprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('paid', models.IntegerField(null=True)),
                ('outstanding', models.IntegerField(null=True)),
                ('total', models.IntegerField(null=True)),
                ('payment_type', models.CharField(choices=[('I', 'Individual'), ('C', 'Consulting')], default='I', max_length=1)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
    ]
